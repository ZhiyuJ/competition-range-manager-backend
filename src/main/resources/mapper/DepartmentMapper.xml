<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.sdu.ise.labs.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sdu.ise.labs.model.Department">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="tenant_code" property="tenantCode" jdbcType="VARCHAR"/>
    <result column="department_code" property="departmentCode" jdbcType="VARCHAR"/>
    <result column="department_name" property="departmentName" jdbcType="VARCHAR"/>
    <result column="contact" property="contact" jdbcType="VARCHAR"/>
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR"/>
    <result column="description" property="description" jdbcType="VARCHAR"/>
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
    <result column="deleted" property="deleted" jdbcType="TINYINT"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, tenant_code, department_code, department_name, contact, contact_phone, description, 
    created_at, updated_at, created_by, updated_by, deleted
  </sql>

  <insert id="insert" parameterType="cn.edu.sdu.ise.labs.model.Department">
    insert into department (id, tenant_code, department_code, 
      department_name, contact, contact_phone, 
      description, created_by, updated_by
      )
    values (#{id,jdbcType=INTEGER}, #{tenantCode,jdbcType=VARCHAR}, #{departmentCode,jdbcType=VARCHAR}, 
      #{departmentName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="cn.edu.sdu.ise.labs.model.Department">
    update department
    set
      department_name = #{departmentName,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 获取名字个数(分页) -->
  <select id="count" resultType="integer">
    select count(*)
    from department
    <where>
      <if test="queryDTO.departmentName != null">
        department_name like #{queryDTO.departmentName}
      </if>
      and tenant_code = #{tenantCode}
      and deleted = 0
    </where>
  </select>

  <!-- 获取部门(分页) -->
  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from department
    <where>
      <if test="queryDTO.departmentName != null">
        department_name like #{queryDTO.departmentName}
      </if>
      and tenant_code = #{tenantCode}
      and deleted = 0
    </where>
    limit #{offset}, #{limit}
  </select>

  <!-- 获取部门列表(分页) -->
  <select id="getByCode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from department
    where
    department_code=#{departmentCode}
    and tenant_code = #{tenantCode}
    and deleted = 0
  </select>

  <!-- 批量删除 -->
  <update id="deleteByCodes">
    update department
    set deleted = 1, updated_by=#{teacherCode}
    where department_code in
    <foreach item="item" index="index" collection="codeList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <!-- 根据代码列表获取部门列表 -->
  <select id="listByCodes" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from department
    where department_code in
    <foreach item="item" index="index" collection="codeList" open="(" separator="," close=")">
      #{item}
    </foreach>
    and tenant_code = #{tenantCode}
    and deleted = 0
  </select>

  <!-- 根据代码列表获取部门列表 -->
  <select id="listByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from department
    where
    <if test="departmentName!=null">
      department_name like #{departmentName}
    </if>
    and tenant_code = #{tenantCode}
    and deleted = 0
  </select>


</mapper>